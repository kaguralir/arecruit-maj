import React ,{useState,useEffect,Component}from 'react'
import cookie from 'cookie'
import Head from 'next/head'
import Link from 'next/link'
import Header from '../../../components/header/header'
import Footer from '../../../components/footer/footer'
import WrapListLayout from '../../../components/layouts/wrap_list_layout'
import Axios from 'axios'
import axios from 'axios'
import jwt_decode from 'jwt-decode'
import BigSizeScreenNotif from '../../../components/notification/bigSizeScreenNotif'
import Image from 'next/image'
import {api} from '../../api/api'


export default class index extends Component {

    state={

        //Initial state
        api : api,
        user : [],
        user_info : []
    }

    render() {

       // console.log(this.props.data.company_info)

        return (
            <div className="recruteur">

                <div className="interface-layout">
                    <Head>
                        <title>A recruit | Candidat</title>
                        <meta name="description" content="Generated by create next app" />
                        <link rel="icon" href="/favicon.ico" />
                    </Head>
                    {/*---------------*/}
                    <Header
                    />
                    {/*---------------*/}
                    
                    <main className="body">

                        <div className="top mbXl">
                         
                            <div className="previewXL orientationH">
                                {!this.props.data.company_info.company_logo ?
                                    <div className="defaultLogo"><div>{this.props.data.company_info.company_name && this.props.data.company_info.company_name.charAt(0)}</div></div>
                                    :
                                    <Image alt="logo" loader={this.customImgLoader} src={this.props.data.company_info.company_logo} width={200} height={200}/>
                                }                                
                                <div style={{marginLeft:'1em'}}>
                                    <div><span> Nom : {this.props.data.user.user_firstname} {this.props.data.user.user_name}</span></div>
                                    <div>Email : {this.props.data.user.user_email}</div>
                                    <div>Nationalité : {this.props.data.user.user_nationality}</div>
                                    <div>Adresse postale : {this.props.data.user.user_address}</div>
                                    <div>Code postal : {this.props.data.user.user_zip_code}</div>
                                    <div>Ville : {this.props.data.user.user_city}</div>
                                    <div>Département : {this.props.data.user.user_department}</div>
                                    <div>Tel : {this.props.data.user.user_phone_number}</div> 

                                </div>
                                <div className="recrutor-consultant center">
                                    <div>
                                        <span>Mon conseiller A RECRUIT</span>
                                        <p>{this.props.data.company_info.company_consultant_name+ " " +this.props.data.company_info.company_consultant_firstname}</p>
                                        <div>
                                            <Image className="recrutor-consultant-img" src ="/images/zinedine.png" width={100} height = {100}/>
                                        </div>
                                        <br></br>
                                        <Link href="/">
                                            <a className="center">
                                                Vers page A RECRUIT &#8594;
                                            </a>
                                        </Link>

                                    </div>

                                </div>
                            
                            </div>
                           
                        </div>
                        {/* ZONE FAIRE MA DEMANDE */}
                        <div className="show_hide_layout orientationH  center demandes_link">
                            <Link href={{pathname:"/interface/recruteur/newjobposting",query:{by:this.props.data.company_info.company_id}}}>
                                <a> <div className="button full">POSTULER</div></a>
                            </Link>
                            <Link href="/">
                                <a> <div className="button full">PRENDRE RENDEZ-VOUS</div></a>
                            </Link>
                            <Link href={{pathname:"/utils/fileExplorer"}}>
                                <a> <div className="button full">MES DOCUMENTS</div></a>
                            </Link>
                            <Link href={{pathname:"/utils/fileExplorer"}}>
                                <a> <div className="button full">OFFRES</div></a>
                            </Link>
                            <Link href={{pathname:"/utils/fileExplorer"}}>
                                <a> <div className="button full">TUTORIELS</div></a>
                            </Link>
                            <Link href={{pathname:"/utils/fileExplorer"}}>
                                <a> <div className="button full">NEWSLETTER</div></a>
                            </Link>
                            {/* <Link href={{pathname:"/utils/pdf",query:{url:this.props.data.company_info.company_contrat,tobesigned:true,by: this.props.data.company_info.company_id}}}>
                                <a> <div className="button full">MES DOCUMENTS</div></a>
                            </Link> */}
                        </div>
                        <div className="bottom ">
                        
                            {/* DEMANDE EN COURS */}
                            <WrapListLayout
                                title= "POSTES RECHERCHES"
                                linkForMore=""
                            >
                                {this.props.data.company_unFilledJobs.length!==0 ? this.props.data.company_unFilledJobs.map((job, index) => {
                                    return (
                                        <div className="demande" key={index}>
                                            <div className="w100 orientationH">
                                                <div className="demande_left w100">
                                                    <label>{job.job_title}</label>
                                                    <div className="w100"><label>Crée le :</label><label>{job.created_at}</label></div>
                                                    <div className="w100"><label>Retenue  : </label>{job.job_hire}</div>
                                                </div>
                                                <div className="demande_right orientationV spaceBetween">
                                                    <img title="Modifier" src="/images/icon_edit_white.png" className= "smallIcon"/>
                                                    <img title="Supprimer" src="/images/icon_delete_white.png" className= "smallIcon" onClick={()=>{this.deletejob(job.job_id)}}/>
                                                </div>

                                            </div>
                                        </div>
            
                                        
                                    );
                                })
                                : <div>AUCUN POSTE RECHERCHE</div>}
                                {this.props.data.company_unFilledJobs.length === 4 && <Link  href={{pathname:"/interface/recruteur/allJobs",query:{dest:"unfilled",company_id:this.props.data.company_info.company_id}}}>
                                    <a>
                                        <div className="show_more">voir plus {">>"}</div>
                                    </a>
                                </Link>}
                            
                            
                            </WrapListLayout>
                            

                            {/*MES DEMANDE*/}
                            <WrapListLayout
                                title= "AJOUTER UN POSTE"
                                linkForMore=""
                            >
                            {this.props.data.company_fillededJobs.length!==0 ? company_fillededJobs.map((job, index) => {
                                    return (
                                        <div className="demande" key={index}>
                                            <label>{job.job_title}</label>
                                            <div><label>Crée le :</label> {job.created_at}</div>
                                            <div><label>Retenue  : </label>{" "+ job.job_hire}</div>
                                        </div>                      
                                    );
                                })
                                : <div></div>}
                                    
                                <div className="demande more orientationV center">
                                    <Link  href={{pathname:"/interface/recruteur/newjobposting",query:{by:this.props.data.company_info.company_id}}}>
                                        <a className="center orientationV" >
                                            <div className="more_btn center">+</div>
                                            Ajouter un poste
                                        </a>
                                    </Link>
                                </div>
                                {this.props.data.company_fillededJobs.length === 4 && <Link  href={{pathname:"/interface/recruteur/allJobs",query:{dest:"filled",company_id:this.props.data.company_info.company_id}}}>
                                    <a>
                                        <div className="show_more">voir plus {">>"}</div>
                                    </a>
                                </Link>}
                            </WrapListLayout>
                            
                            <BigSizeScreenNotif
                                showHide = {this.props.data.show_hide3}
                                callback = {()=>{setShow_hide3(!show_hide3)}}
                            />
                            <div className="conseils w90">

                                <span>J'affine mon profil</span>
                                <div className="orientationH">
                                    <div className=" orientationV">
                                        
                                        <Image className="" src ="/images/creer_offre.jpg" width={150} height = {150}/>
                                        <Link href="/">
                                            <a className="a">
                                            {"Télécharger ma LM"}
                                            </a>
                                        </Link>
                                    </div>
                                    <div className=" orientationV">
                                        
                                    <Image className="" src ="/images/creer_presentation.jpg" width={150} height = {150}/>
                                        <Link href="/">
                                            <a className="a">
                                            {"Télécharger mon CV"}
                                            </a>
                                        </Link>
                                    </div>

                                    
                                
                                    
                                </div>
                            </div>
                        </div>
                    </main>

                    {/*---------------*/}
                    <Footer/>

                </div>
            </div>
        )
    }
}

export async function getServerSideProps({ req }) {
    
    
    const user_cookie = cookie.parse(req ? req.headers.cookie || "" : document.cookie)
    
    if(user_cookie.me){
        
        const user = jwt_decode(JSON.stringify(user_cookie))
        let data=[]
        let company_info=[]
        let company_unFilledJobs=[]
        let company_fillededJobs=[]
        let company_department=[]
        let europe_country=[]

        await axios.post(`${api}/getCompanyInfo`,{
            user_id:user.user_id,
        }).then((reponse)=>{
            company_info= reponse.data
        })    

        await axios.post(`${api}/getUnFillededJobLimit4`,
        {
            company_id:company_info.company_id 
        }).then((reponse)=>{
            company_unFilledJobs=reponse.data
        })

        await axios.post(`${api}/getFillededJobLimit4`,
        {
            company_id:company_info.company_id
        }).then((reponse)=>{
            company_fillededJobs=reponse.data
        })

        await axios.get("https://geo.api.gouv.fr/departements")
        .then((reponse)=>{
            company_department=reponse.data
        });

        ///Chargement des données régionnaux pour les formulaires

        data = await {...data,company_info:company_info,company_unFilledJobs:company_unFilledJobs,company_fillededJobs:company_fillededJobs,company_department:company_department,europe_country:europe_country, user:user}
    
       // console.log(data)
        return {
            props: {
                data
            }
        }
    }
    return {
        redirect: {
            permanent: false,
            destination: "/auth/login?dest=recruteur",
        },
        props:{message:"redirect"},
    }
   
   
}


